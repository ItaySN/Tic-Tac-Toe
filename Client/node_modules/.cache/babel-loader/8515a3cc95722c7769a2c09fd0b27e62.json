{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Itay\\\\Documents\\\\GitHub\\\\Tic-Tac-Toe\\\\Client\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WinnerModal from './modal.js';\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, props.value);\n}\n\nfunction Board(props) {\n  function renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: props.squares[i],\n      onClick: () => props.onClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, renderSquare(0), renderSquare(1), renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, renderSquare(3), renderSquare(4), renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, renderSquare(6), renderSquare(7), renderSquare(8)));\n}\n\nfunction Game() {\n  const [state, setState] = useState({\n    history: [{\n      squares: Array(9).fill(null)\n    }],\n    stepNumber: 0,\n    xIsNext: true\n  });\n\n  function handleClick(i) {\n    const history = state.history.slice(0, state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = state.xIsNext ? \"X\" : \"O\";\n    setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !state.xIsNext\n    });\n  }\n\n  function jumpTo(step) {\n    setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n      history: state.history\n    });\n  }\n\n  const history = state.history;\n  const current = history[state.stepNumber];\n  const winner = calculateWinner(current.squares);\n  const moves = history.map((step, move) => {\n    const desc = move ? 'Go to move #' + move : 'Go to game start';\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: move,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => jumpTo(move),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, desc));\n  });\n  let status;\n\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (state.xIsNext ? \"X\" : \"O\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Board, {\n    squares: current.squares,\n    onClick: i => handleClick(i),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"game-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, status), /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, moves)), winner && /*#__PURE__*/React.createElement(WinnerModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 20\n    }\n  }));\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["C:/Users/Itay/Documents/GitHub/Tic-Tac-Toe/Client/src/index.js"],"names":["React","useState","ReactDOM","WinnerModal","Square","props","onClick","value","Board","renderSquare","i","squares","Game","state","setState","history","Array","fill","stepNumber","xIsNext","handleClick","slice","current","length","calculateWinner","concat","jumpTo","step","winner","moves","map","move","desc","status","render","document","getElementById","lines","a","b","c"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport WinnerModal from './modal.js'\r\n\r\n\r\n\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction Board (props) {\r\n  function renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={props.squares[i]}\r\n        onClick={() => props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {renderSquare(0)}\r\n          {renderSquare(1)}\r\n          {renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {renderSquare(3)}\r\n          {renderSquare(4)}\r\n          {renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {renderSquare(6)}\r\n          {renderSquare(7)}\r\n          {renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nfunction Game() {\r\n  const [state, setState] = useState({\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null)\r\n        }\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true\r\n    });\r\n  \r\n\r\n  function handleClick(i) {\r\n    const history = state.history.slice(0, state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = state.xIsNext ? \"X\" : \"O\";\r\n    setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares\r\n        }\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !state.xIsNext\r\n    });\r\n  }\r\n\r\n  function jumpTo(step) {\r\n    setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n      history: state.history\r\n    });\r\n  }\r\n  const history = state.history;\r\n  const current = history[state.stepNumber];\r\n  const winner = calculateWinner(current.squares);\r\n\r\n  const moves = history.map((step, move) => {\r\n    const desc = move ?\r\n      'Go to move #' + move :\r\n      'Go to game start';\r\n    return (\r\n      <li key={move}>\r\n        <button onClick={() => jumpTo(move)}>{desc}</button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n\r\n    } else {\r\n      status = \"Next player: \" + (state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={i => handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n        {winner && <WinnerModal/>}\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6]\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}"]},"metadata":{},"sourceType":"module"}